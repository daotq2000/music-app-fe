{"ast":null,"code":"import{call,put}from\"redux-saga/effects\";import{getAlbumById}from'../api/albumApi';import{controlPlayBarSuccess,getPlayListFailed,getPlayListSuccess}from\"../redux/playReducer\";export function getPlayListByAlbumIdSaga(_ref){let{payload}=_ref;return function*(){try{const res=yield call(getAlbumById,payload);const arrayPlayList=res.data.albumSongs;if(arrayPlayList.length>0){yield put(getPlayListSuccess(arrayPlayList));}}catch(error){yield put(getPlayListFailed(error));}}();}export function controlPlayBarSaga(_ref2){let{payload}=_ref2;return function*(){try{yield put(controlPlayBarSuccess(payload));}catch(error){}}();}export function playSingleSongSaga(_ref3){let{payload}=_ref3;return function*(){let playlist=[];try{if(payload.length==undefined){let songs={songs:payload};playlist.push(songs);}else{playlist=payload;}if(playlist.length>0){yield put(getPlayListSuccess(playlist));}}catch(error){}}();}","map":{"version":3,"names":["call","put","getAlbumById","controlPlayBarSuccess","getPlayListFailed","getPlayListSuccess","getPlayListByAlbumIdSaga","_ref","payload","res","arrayPlayList","data","albumSongs","length","error","controlPlayBarSaga","_ref2","playSingleSongSaga","_ref3","playlist","undefined","songs","push"],"sources":["/home/luongtx/Workspace/personal/music-app-fe/src/saga/play.js"],"sourcesContent":["import {call, put} from \"redux-saga/effects\";\nimport {getAlbumById} from '../api/albumApi'\nimport {controlPlayBarSuccess, getPlayListFailed, getPlayListSuccess} from \"../redux/playReducer\";\n\nexport function* getPlayListByAlbumIdSaga({ payload }) {\n    try {\n        const res = yield call(getAlbumById, payload);\n        const arrayPlayList = res.data.albumSongs;\n        if(arrayPlayList.length > 0){\n            yield put(getPlayListSuccess(arrayPlayList));\n        }\n    } catch (error) {\n        yield put(getPlayListFailed(error));\n    }\n}\nexport function* controlPlayBarSaga({ payload }) {\n    try {\n        yield put(controlPlayBarSuccess(payload));\n    }catch (error) {\n    }\n}\nexport function* playSingleSongSaga({ payload }) {\n    let playlist = [];\n    try {\n        if(payload.length == undefined){\n            let songs = {songs: payload};\n            playlist.push(songs);\n        }else{\n            playlist = payload;\n        }\n        if(playlist.length > 0){\n            yield put(getPlayListSuccess(playlist));\n        }\n    }catch (error) {\n    }\n}\n"],"mappings":"AAAA,OAAQA,IAAI,CAAEC,GAAG,KAAO,oBAAoB,CAC5C,OAAQC,YAAY,KAAO,iBAAiB,CAC5C,OAAQC,qBAAqB,CAAEC,iBAAiB,CAAEC,kBAAkB,KAAO,sBAAsB,CAEjG,MAAO,SAAU,CAAAC,wBAAwBA,CAAAC,IAAA,KAAC,CAAEC,OAAQ,CAAC,CAAAD,IAAA,mBAAE,CACnD,GAAI,CACA,KAAM,CAAAE,GAAG,CAAG,KAAM,CAAAT,IAAI,CAACE,YAAY,CAAEM,OAAO,CAAC,CAC7C,KAAM,CAAAE,aAAa,CAAGD,GAAG,CAACE,IAAI,CAACC,UAAU,CACzC,GAAGF,aAAa,CAACG,MAAM,CAAG,CAAC,CAAC,CACxB,KAAM,CAAAZ,GAAG,CAACI,kBAAkB,CAACK,aAAa,CAAC,CAAC,CAChD,CACJ,CAAE,MAAOI,KAAK,CAAE,CACZ,KAAM,CAAAb,GAAG,CAACG,iBAAiB,CAACU,KAAK,CAAC,CAAC,CACvC,CACJ,CAAC,IACD,MAAO,SAAU,CAAAC,kBAAkBA,CAAAC,KAAA,KAAC,CAAER,OAAQ,CAAC,CAAAQ,KAAA,mBAAE,CAC7C,GAAI,CACA,KAAM,CAAAf,GAAG,CAACE,qBAAqB,CAACK,OAAO,CAAC,CAAC,CAC7C,CAAC,MAAOM,KAAK,CAAE,CACf,CACJ,CAAC,IACD,MAAO,SAAU,CAAAG,kBAAkBA,CAAAC,KAAA,KAAC,CAAEV,OAAQ,CAAC,CAAAU,KAAA,mBAAE,CAC7C,GAAI,CAAAC,QAAQ,CAAG,EAAE,CACjB,GAAI,CACA,GAAGX,OAAO,CAACK,MAAM,EAAIO,SAAS,CAAC,CAC3B,GAAI,CAAAC,KAAK,CAAG,CAACA,KAAK,CAAEb,OAAO,CAAC,CAC5BW,QAAQ,CAACG,IAAI,CAACD,KAAK,CAAC,CACxB,CAAC,IAAI,CACDF,QAAQ,CAAGX,OAAO,CACtB,CACA,GAAGW,QAAQ,CAACN,MAAM,CAAG,CAAC,CAAC,CACnB,KAAM,CAAAZ,GAAG,CAACI,kBAAkB,CAACc,QAAQ,CAAC,CAAC,CAC3C,CACJ,CAAC,MAAOL,KAAK,CAAE,CACf,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}