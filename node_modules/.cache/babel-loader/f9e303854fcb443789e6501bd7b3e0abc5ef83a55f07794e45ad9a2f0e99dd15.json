{"ast":null,"code":"import{createSlice}from'@reduxjs/toolkit';const initialState={genres:[],currentPage:0,totalPages:0,totalElements:0};const genresReducer=createSlice({name:'genresReducer',initialState,reducers:{paginationGenres(state,payload){},paginationGenresSuccess(state,action){const data=action.payload;return{...data};},paginationGenresFailed(state,action){},getAlbumAndSongByGenresId(state,action){},getAlbumAndSongByGenresIdSuccessfully(state,action){return{...state,songAndAlbum:action.payload};},getAlbumAndSongByGenresIdFailed(state,action){},getGenresById(state,action){},getGenresByIdSuccess(state,action){const data=action.payload;return{...state,currentGenres:data};},getGenresByIdFailed(state,action){}}});export const{paginationGenres,paginationGenresSuccess,paginationGenresFailed,getAlbumAndSongByGenresId,getAlbumAndSongByGenresIdSuccessfully,getAlbumAndSongByGenresIdFailed,getGenresById,getGenresByIdSuccess,getGenresByIdFailed}=genresReducer.actions;export default genresReducer.reducer;","map":{"version":3,"names":["createSlice","initialState","genres","currentPage","totalPages","totalElements","genresReducer","name","reducers","paginationGenres","state","payload","paginationGenresSuccess","action","data","paginationGenresFailed","getAlbumAndSongByGenresId","getAlbumAndSongByGenresIdSuccessfully","songAndAlbum","getAlbumAndSongByGenresIdFailed","getGenresById","getGenresByIdSuccess","currentGenres","getGenresByIdFailed","actions","reducer"],"sources":["/home/luongtx/Workspace/personal/music-app-fe/src/redux/genresReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n    genres: [],\n    currentPage: 0,\n    totalPages: 0,\n    totalElements: 0,\n}\nconst genresReducer = createSlice({\n    name: 'genresReducer',\n    initialState,\n    reducers: {\n        paginationGenres(state, payload) {\n        },\n        paginationGenresSuccess(state, action) {\n            const data = action.payload\n            return { ...data }\n        },\n        paginationGenresFailed(state, action) {\n        },\n        getAlbumAndSongByGenresId(state, action) {\n\n        }, getAlbumAndSongByGenresIdSuccessfully(state, action) {\n            return { ...state, songAndAlbum: action.payload }\n        }, getAlbumAndSongByGenresIdFailed(state, action) {\n\n        },\n        getGenresById(state, action) {\n\n        }, getGenresByIdSuccess(state, action) {\n            const data = action.payload\n            return { ...state,currentGenres:data }\n        },\n        getGenresByIdFailed(state, action) {\n\n        }\n    }\n})\nexport const { paginationGenres, paginationGenresSuccess, paginationGenresFailed,\n    getAlbumAndSongByGenresId, getAlbumAndSongByGenresIdSuccessfully, getAlbumAndSongByGenresIdFailed,\n    getGenresById,getGenresByIdSuccess,getGenresByIdFailed } = genresReducer.actions;\nexport default genresReducer.reducer;"],"mappings":"AAAA,OAASA,WAAW,KAAQ,kBAAkB,CAE9C,KAAM,CAAAC,YAAY,CAAG,CACjBC,MAAM,CAAE,EAAE,CACVC,WAAW,CAAE,CAAC,CACdC,UAAU,CAAE,CAAC,CACbC,aAAa,CAAE,CACnB,CAAC,CACD,KAAM,CAAAC,aAAa,CAAGN,WAAW,CAAC,CAC9BO,IAAI,CAAE,eAAe,CACrBN,YAAY,CACZO,QAAQ,CAAE,CACNC,gBAAgBA,CAACC,KAAK,CAAEC,OAAO,CAAE,CACjC,CAAC,CACDC,uBAAuBA,CAACF,KAAK,CAAEG,MAAM,CAAE,CACnC,KAAM,CAAAC,IAAI,CAAGD,MAAM,CAACF,OAAO,CAC3B,MAAO,CAAE,GAAGG,IAAK,CAAC,CACtB,CAAC,CACDC,sBAAsBA,CAACL,KAAK,CAAEG,MAAM,CAAE,CACtC,CAAC,CACDG,yBAAyBA,CAACN,KAAK,CAAEG,MAAM,CAAE,CAEzC,CAAC,CAAEI,qCAAqCA,CAACP,KAAK,CAAEG,MAAM,CAAE,CACpD,MAAO,CAAE,GAAGH,KAAK,CAAEQ,YAAY,CAAEL,MAAM,CAACF,OAAQ,CAAC,CACrD,CAAC,CAAEQ,+BAA+BA,CAACT,KAAK,CAAEG,MAAM,CAAE,CAElD,CAAC,CACDO,aAAaA,CAACV,KAAK,CAAEG,MAAM,CAAE,CAE7B,CAAC,CAAEQ,oBAAoBA,CAACX,KAAK,CAAEG,MAAM,CAAE,CACnC,KAAM,CAAAC,IAAI,CAAGD,MAAM,CAACF,OAAO,CAC3B,MAAO,CAAE,GAAGD,KAAK,CAACY,aAAa,CAACR,IAAK,CAAC,CAC1C,CAAC,CACDS,mBAAmBA,CAACb,KAAK,CAAEG,MAAM,CAAE,CAEnC,CACJ,CACJ,CAAC,CAAC,CACF,MAAO,MAAM,CAAEJ,gBAAgB,CAAEG,uBAAuB,CAAEG,sBAAsB,CAC5EC,yBAAyB,CAAEC,qCAAqC,CAAEE,+BAA+B,CACjGC,aAAa,CAACC,oBAAoB,CAACE,mBAAoB,CAAC,CAAGjB,aAAa,CAACkB,OAAO,CACpF,cAAe,CAAAlB,aAAa,CAACmB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}